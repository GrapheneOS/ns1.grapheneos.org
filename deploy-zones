#!/bin/bash

set -o errexit -o nounset -o pipefail

reconfigure=0
if [[ $# -eq 1 ]]; then
    if [[ $1 == reconfigure ]]; then
        reconfigure=1
    else
        echo invalid parameter
        exit 1
    fi
elif [[ $# -ne 0 ]]; then
    echo too many parameters
    exit 1
fi

servers=(
    staging.ns1.grapheneos.org
    ns1.grapheneos.org
    ns2.grapheneos.org
)

declare -A ipv4=(
    [staging.ns1.grapheneos.org]=51.222.140.199
    [ns1.grapheneos.org]=144.217.195.151
    [ns2.grapheneos.org]=46.105.58.84
)

declare -A ipv6=(
    [staging.ns1.grapheneos.org]=2607:5300:205:200::39fe
    [ns1.grapheneos.org]=2607:5300:205:200::29e8
    [ns2.grapheneos.org]=2001:41d0:304:200::528
)

# use YYYYMMDDSS SOA serial format
old_serial=$(cat serial.txt 2>/dev/null || echo -n $(date +"%Y%m%d00"))
serial=$(date +"%Y%m%d")
if [[ ${old_serial:0:8} = ${serial} ]]; then
    old_sequence=${old_serial:8:2}
    old_sequence=${old_sequence##0}
    [[ $old_sequence -eq 99 ]] && old_sequence=0
    serial+=$(printf %02d $(( $old_sequence + 1 )))
else
    serial+=01
fi
echo serial: $serial
echo
echo -n $serial > serial.txt

for server in ${servers[@]}; do
    echo $server

    remote=root@$server

    if (( reconfigure )); then
        cp pdns.conf pdns.conf.tmp
        sed -i "s/{ipv4}/${ipv4[$server]}/g; s/{ipv6}/${ipv6[$server]}/g" pdns.conf.tmp
        rsync -pcv --chmod=F644 pdns.conf.tmp $remote:/etc/powerdns/pdns.conf
    fi

    cp zones.yaml zones.yaml.tmp
    sed -i "s/{serial}/$serial/g; s/{serial}/$serial/g" zones.yaml.tmp
    rsync -pcv --chmod=F644 zones.yaml.tmp $remote:/etc/powerdns/zones.yaml

    if (( reconfigure )); then
        ssh $remote systemctl restart pdns
        sleep 5
    else
        ssh $remote pdns_control reload
    fi

    echo
done
